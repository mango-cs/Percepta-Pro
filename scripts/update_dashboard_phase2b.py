#!/usr/bin/env python3\n\"\"\"\nPhase 2B Dashboard Integration Update\nUpdate reputation dashboard to use enhanced comments dataset\nIntegrate new bilingual AI features and threat detection\n\"\"\"\n\nimport pandas as pd\nimport streamlit as st\nfrom pathlib import Path\nimport sys\nimport os\n\ndef update_dashboard_data_loading():\n    \"\"\"\n    Update the dashboard's data loading function to use Phase 2B enhanced dataset\n    \"\"\"\n    dashboard_file = \"reputation_dashboard.py\"\n    \n    if not Path(dashboard_file).exists():\n        print(f\"❌ Dashboard file not found: {dashboard_file}\")\n        return False\n    \n    # Read current dashboard\n    with open(dashboard_file, 'r', encoding='utf-8') as f:\n        dashboard_content = f.read()\n    \n    # Check if already updated\n    if \"youtube_comments_ai_enhanced.csv\" in dashboard_content:\n        print(\"✅ Dashboard already uses Phase 2B enhanced dataset\")\n        return True\n    \n    # Update comments data loading\n    old_comments_path = \"backend/data/comments/youtube_comments_final.csv\"\n    new_comments_path = \"backend/data/comments/youtube_comments_ai_enhanced.csv\"\n    \n    dashboard_content = dashboard_content.replace(\n        old_comments_path, new_comments_path\n    )\n    \n    # Write updated dashboard\n    with open(dashboard_file, 'w', encoding='utf-8') as f:\n        f.write(dashboard_content)\n    \n    print(f\"✅ Updated dashboard to use {new_comments_path}\")\n    return True\n\ndef test_enhanced_data_loading():\n    \"\"\"\n    Test loading the enhanced datasets to ensure compatibility\n    \"\"\"\n    print(\"\\n🧪 Testing Enhanced Dataset Loading...\")\n    \n    try:\n        # Load videos\n        videos_path = \"backend/data/videos/youtube_videos_ai_processed.csv\"\n        videos_df = pd.read_csv(videos_path)\n        print(f\"✅ Videos loaded: {len(videos_df)} rows, {len(videos_df.columns)} columns\")\n        \n        # Load enhanced comments\n        comments_path = \"backend/data/comments/youtube_comments_ai_enhanced.csv\"\n        comments_df = pd.read_csv(comments_path)\n        print(f\"✅ Enhanced comments loaded: {len(comments_df)} rows, {len(comments_df.columns)} columns\")\n        \n        # Verify new Phase 2B columns\n        phase2b_columns = [\n            'SentimentScore_TE', 'SentimentScore_EN',\n            'SentimentLabel_TE', 'SentimentLabel_EN',\n            'Keywords_TE', 'Keywords_EN',\n            'ThreatDetected', 'ThreatLevel', 'ThreatScore'\n        ]\n        \n        found_columns = [col for col in phase2b_columns if col in comments_df.columns]\n        print(f\"✅ Phase 2B AI columns found: {len(found_columns)}/{len(phase2b_columns)}\")\n        \n        # Test bilingual sentiment analysis\n        if 'SentimentScore_TE' in comments_df.columns:\n            te_sentiment = comments_df['SentimentScore_TE'].notna().sum()\n            print(f\"✅ Telugu sentiment analysis: {te_sentiment} comments processed\")\n        \n        if 'SentimentScore_EN' in comments_df.columns:\n            en_sentiment = comments_df['SentimentScore_EN'].notna().sum()\n            print(f\"✅ English sentiment analysis: {en_sentiment} comments processed\")\n        \n        # Test threat detection\n        if 'ThreatDetected' in comments_df.columns:\n            threats = comments_df['ThreatDetected'].sum()\n            print(f\"✅ Threats detected: {threats} comments flagged\")\n        \n        return True\n        \n    except Exception as e:\n        print(f\"❌ Error loading enhanced datasets: {str(e)}\")\n        return False\n\ndef main():\n    \"\"\"\n    Main Phase 2B dashboard integration update\n    \"\"\"\n    print(\"🚀 Phase 2B Dashboard Integration Update\")\n    print(\"==========================================\")\n    \n    # Step 1: Update dashboard data loading\n    print(\"\\n📝 Step 1: Updating dashboard data loading...\")\n    if not update_dashboard_data_loading():\n        print(\"❌ Failed to update dashboard\")\n        return False\n    \n    # Step 2: Test enhanced data loading\n    print(\"\\n🧪 Step 2: Testing enhanced data compatibility...\")\n    if not test_enhanced_data_loading():\n        print(\"❌ Enhanced data loading failed\")\n        return False\n    \n    # Step 3: Success summary\n    print(\"\\n🎉 Phase 2B Dashboard Integration Complete!\")\n    print(\"============================================\")\n    print(\"✅ Dashboard updated to use enhanced comments dataset\")\n    print(\"✅ New bilingual AI features available\")\n    print(\"✅ Threat detection integrated\")\n    print(\"✅ All data compatibility verified\")\n    print(\"\\n🚀 Ready to launch updated dashboard with Phase 2B features!\")\n    print(\"   Command: streamlit run reputation_dashboard.py\")\n    \n    return True\n\nif __name__ == \"__main__\":\n    success = main()\n    if not success:\n        sys.exit(1) 